import {TILE, COLS, ROWS} from './utils.js';

/* Maze legend:
  0=wall, 1=dot, 2=empty, 3=power, 4=gate
  Map is 28x31 (classic proportions)
*/
export const LEVELS = [
[
"0000000000000000000000000000",
"0111111111110011111111111110",
"0100001000000010000001000010",
"0311101111110011111110111130",
"0100101000010010000010010010",
"0110101111010010111101010110",
"0100101000010010000010010010",
"0111101111110011111110111110",
"0000101000000000000010010000",
"1111101011110041111101011111",
"0000001000012222000010000000",
"4444441011012222011014444444",
"0000001011012222011010000000",
"1111111011012222011011111111",
"0000001000002222000010000000",
"1111111011112222111110111111",
"0100001000012222000010000010",
"0311101111112222111110111130",
"0100101000002222000010010010",
"0110101011112222111101010110",
"0100101000012222000010010010",
"0111101111112222111110111110",
"0100001000002222000010000010",
"0111111011112222111110111110",
"0000001000012222000010000000",
"1111101011112222111101011111",
"0000101000002222000010010000",
"0111101111112222111110111110",
"0100001000002222000010000010",
"0111111111112222111111111110",
"0000000000000000000000000000"
]
];

export function parseLevel(levelStrs){
  const grid = [];
  const pellets = new Set();
  const powers = new Set();
  for (let y=0; y<ROWS; y++){
    const row = [];
    for (let x=0; x<COLS; x++){
      const ch = Number(levelStrs[y][x]);
      row.push(ch);
      if (ch===1) pellets.add(`${x},${y}`);
      if (ch===3) powers.add(`${x},${y}`);
    }
    grid.push(row);
  }
  return {grid, pellets, powers};
}

export function isWall(grid, x,y){
  if (x<0) x = COLS-1;
  if (x>=COLS) x = 0;
  if (y<0 || y>=ROWS) return true;
  return grid[y][x]===0;
}

export function isGate(grid, x,y){
  return grid[y]?.[x]===4;
}
